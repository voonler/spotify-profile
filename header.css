/*HEADER*/

header{
    height: 5.5rem;
    background: var(--black);
    width: 100%;
    position: fixed;
    z-index: 999;
}

.header-container{
    display: flex;
    justify-content: space-between;
    max-width: 76.5rem;
    height: 100%;
    margin: 0 auto;
    padding: 0 10px;
}

.header-logo{
    display: flex;
    align-items: center;
    height: 100%;
    cursor: pointer;
}

.header-logo img{
    width: 10rem;
}

/*Menu on mobile devices*/
.nav-mobile{
    display: flex;
    align-items: center;
    position: relative;
}

.profile img{
    border: 2px solid none;
    border-radius: 50%;
    width: 3.5rem;
    height: 3.5rem;
    display: flex;
    align-items: center;
    cursor: pointer;
    justify-content: center;
    margin-right: 1.5rem;
}

.profile .profile-icon:hover{
    border-color: var(--green2);
}

/*MENU*/
.toggler{
    width: 2rem;
    height: 3rem;
    cursor: pointer;
    z-index: 2;

}

.hamburger-menu{
    width: 2rem;
    height: 3rem;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    right: 0;
    /*opacity:0;*/
}

.hamburger-menu div{
    position: relative;
    transition: all 0.4s ease; /*Transition for the hamburger to turn into a "x"*/
}

/*Hamburger menu lines*/
.hamburger-menu div,
.hamburger-menu div::before,
.hamburger-menu div::after{
    content:"";
    height: 0.3rem;
    width: 100%;
    background: var(--white);
    border-radius: 1rem;
}

/*Positions the bottom hamburger menu line 0.7rem below the .hamburger-menu div*/
.hamburger-menu div::before{
    position: absolute;
    top: -0.7rem;
}

/*Top hamburger line 0.7rem below*/
.hamburger-menu div::after{
    position: absolute;
    top: 0.7rem;
}

/*Rotate the hamburger menu when it is clicked/checked on*/
.toggler:checked + .hamburger-menu > div{
    transform: rotate(135deg);
}

/* Rotate the top and bottom lines in the hamburger menu when it is clicked */
.toggler:checked + .hamburger-menu > div::before,
.toggler:checked + .hamburger-menu > div::after
/*selects .hamburger-menu that is immediately placed after .toggler and all div elements are selected where the parent is a .hamburger-menu element*/
{
  top: 0;
  transform: rotate(90deg);
}

/*Menu Overlay*/
.menu-overlay{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: fixed;
    width: 0;
    opacity: 0;
    height: 100%;
    background: var(--black);
    top: 0;
    right: 0;
    overflow-y: scroll;
    overflow-x: hidden;
    visibility: hidden;
    padding: 4rem;
    transition: all 0.3s ease;
    z-index: 999;
}

.background-overlay{
    position: absolute;
    width: 100rem;
    height: 100vh; /*100% height of the viewport*/
    background: rgba(0,0,0,0.7);
    top: 0;
    right: 0;
    display: none;
}

.toggler:checked + .hamburger-menu + .menu > .background-overlay {
    display: initial; /*Sets .background-overlay elements to default value*/
  }
  
  .toggler:checked + .hamburger-menu + .menu > .menu-overlay {
    visibility: visible;
    width: 44.7rem;
    max-width: 100vw;/*100% width of the viewport*/
    opacity: 1;
  }

  /*Make the toggler visible and be on top of the hamburger menu*/
.toggler:checked{
    z-index: 1001;
}

.toggler:checked + .hamburger-menu{
    z-index: 1000;
}

.menu-overlay li,
.menu-overlay-logo{
    opacity: 0;
    transform: translateX(100%); /*This */
    transition: all 0.5s ease; /*How long do the li and logo elements take to return to its original position after being displaced on the x axis*/
}

.toggler:checked + .hamburger-menu + .menu > .menu-overlay li,
.toggler:checked + .hamburger-menu + .menu > .menu-overlay .menu-overlay-logo {
  transform: translateX(0); /*This shifts the li elements to the most left of the background-overlay*/
  opacity: 1;
}


.menu-overlay li{
    color: var(--white);
    font-size: 4rem;
    font-weight: 650;
    margin-bottom: 1rem; /*Adds a space of 1rem between each li element within the menu-overlay class*/
}

/*Time to make the li items in the menu-overlay class slide from right to left*/

.menu-overlay li::nth-child(1){/*This chooses the 1st li item of the parent menu-overlay. Cool method to access items that have no specific individual classes*/
    transition: transform 0.1s ease;
}

.menu-overlay li:nth-child(2){
    transition: transform 0.2s ease;
}

.menu-overlay li:nth-child(3){
    transition: transform 0.3s ease;
}

.menu-overlay li:nth-child(4){
    transition: transform 0.4s ease;
}

.menu-overlay li:nth-child(5){
    transition: transform 0.5s ease;
}

.menu-overlay li:nth-child(6){
    transition: transform 0.6s ease;
}

.menu-overlay-logo{
    transition: transform 0.6s ease;
}

/*Adds color to li links when hovered upon*/
.menu-overlay li a:hover{
    color: var(--green2);
}

/*Time to make our seperator visible on the background overlay*/
.menu-overlay li:nth-child(4){
    width: 2rem;
    background: var(--white);
    height: 0.15rem;
    margin: 4rem 0;
}

/*Modify the last 2 li items due to difference in font size and weight. Here is a special method to do so*/
.menu-overlay li:nth-last-child(-n + 2){
    /* Using a formula (an + b). Description: a represents a cycle size, n is a counter (starts at 0), and b is an offset value. */
    /*Takes the 2 last li items starting from the last child*/
    font-size: 2.8rem;
    font-weight: 400;
}

.menu-overlay li:last-child{
    margin: 2rem 0;
}

.menu-overlay-logo img{
    width: 9rem;
    cursor: pointer;
}

/*Desktop Menu*/

.nav-desktop{
    display: none;
}

.nav-desktop ul li{
    font-size: 1.5rem;
    color: var(--white);
    margin-right: 3rem;
    font-weight: 700;
}

.nav-desktop ul{
    display: flex;
    align-items: center;
}

/*Turn the horizontal li separator element into a vertical one*/
.nav-desktop > ul li:last-child{ /*This specifically chooses the ul whose parent is .nav-desktop*/
    transform: rotate(90deg);
    width: 1.7rem;
    height: 0.1rem;
    background: var(--white);
}

/*Green color over li elements in desktop view*/
.nav-desktop ul li a:hover{
    color: var(--green2);
}

.profile-container{
    display: flex;
    cursor: pointer;
    position: relative;
}

/* These lines will change the profile container elements color on hover and on checked */
.profile-container:hover .profile,
.dropdown-menu-toggler:checked + .dropdown-menu + .profile {
  border-color: var(--green2);
}

.dropdown-menu-toggler:checked + .dropdown-menu + .profile + ul li:first-child {
    color: var(--green2);
  }

  /*Select the li with the text "profile*/
.profile-container ul li:first-child{
      margin-right: 1rem;
  }

.profile-container ul li:last-child{
    margin-right: 0;
  }

.profile-arrow{
      width: 1.2rem;
      fill: var(--white);
  }

  /*Styling the dropdown menu*/
.dropdown-menu{
      width: 16rem;
      height: 8rem;
      position: absolute;
      background: var(--white);
      bottom: -9.5rem;
      right: -2rem;
      border-radius: 0.4rem;
      visibility: hidden;
  }

/* Input of type check that will be used to open and close the dropdown menu */
.dropdown-menu-toggler{
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
}

/*Show the dropdown menu when "profile" is clicked upon*/
.dropdown-menu-toggler:checked + .dropdown-menu{
    visibility: visible;
}


/* This code will create the triangle that is on top of the dropdown menu */
.dropdown-menu::before {
    content: "";
    display: block;
    position: absolute;
    width: 0;
    height: 0;
    top: -1.3rem;
    right: 1rem;
    border-left: 1.6rem solid transparent;
    border-right: 1.6rem solid transparent;
    border-bottom: 1.6rem solid var(--white);
  }

  .dropdown-menu ul{
      display: flex;
      flex-direction: column;
      align-items: flex-start;/*https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */
      justify-content: center;
      padding: 1.5rem;
  }

  /*Dropdown menu "Account" link*/
  .dropdown-menu ul li:first-child{
      margin-bottom: 1rem;
      color: black;
  }

  /*Dropdown menu "Account" link*/
  .dropdown-menu ul li:last-child{
    margin-bottom: 1rem;
    color: var(--gray2);
}

/*Changes direction of arrow when user clicks it*/
.dropdown-menu-toggler:checked + .dropdown-menu
+ .profile + ul li:last-child svg{
    transform: rotate(180deg);
}
